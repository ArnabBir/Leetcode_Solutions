/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    vector<int> inOrderTree;
public:
    void isValidBSTUtil(TreeNode* root) {
        if(!root) return;
        isValidBST(root->left);
        inOrderTree.push_back(root->val);
        isValidBST(root->right);
    }
    
    bool isValidBST(TreeNode* root) {
        isValidBSTUtil(root);
        for(int i = 0; i < (int)inOrderTree.size()-1; ++i) {
            if(inOrderTree[i] >= inOrderTree[i+1])   return false;
        }
        return true;
    }
};
